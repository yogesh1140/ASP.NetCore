{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/checkout/checkout.component.css","webpack:///./ClientApp/app/checkout/checkout.component.html","webpack:///./ClientApp/app/checkout/checkout.component.ts","webpack:///./ClientApp/app/login/login.component.html","webpack:///./ClientApp/app/login/login.component.ts","webpack:///./ClientApp/app/shared/data.service.ts","webpack:///./ClientApp/app/shared/order.ts","webpack:///./ClientApp/app/shared/token.interceptor.ts","webpack:///./ClientApp/app/shop/cart.component.html","webpack:///./ClientApp/app/shop/cart.component.ts","webpack:///./ClientApp/app/shop/product-list.component.css","webpack:///./ClientApp/app/shop/product-list.component.html","webpack:///./ClientApp/app/shop/product-list.component.ts","webpack:///./ClientApp/app/shop/shop.component.html","webpack:///./ClientApp/app/shop/shop.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router'\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductListComponent } from './shop/product-list.component';\r\nimport { DataService } from './shared/data.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { CartComponent } from './shop/cart.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { TokenInterceptor } from './shared/token.interceptor';\r\n\r\nlet routes =[\r\n    {path:'', component: ShopComponent},\r\n    {path :'checkout', component: CheckoutComponent},\r\n    {path:'login', component: LoginComponent}\r\n]\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      ProductListComponent,\r\n      CartComponent,\r\n      ShopComponent,\r\n      CheckoutComponent,\r\n      LoginComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      RouterModule.forRoot(routes, {\r\n        useHash: true,\r\n       // enableTracing: true //for Debugging of the Routes\r\n\r\n      }),\r\n      FormsModule\r\n  ],\r\n    providers: [\r\n        DataService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: TokenInterceptor,\r\n            multi: true\r\n          }\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"alert alert-warning\\\" *ngIf=\\\"this.errMessage\\\">{{this.errMessage}}</div>\\n  \\n  <h3>Confirm Order</h3>\\n  <table class=\\\"table table-bordered table-hover\\\">\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\n      <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n      <td>{{ o.quantity }}</td>\\n      <td>{{ o.unitPrice|currency:'INR' }}</td>\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'INR' }}</td>\\n    </tr>\\n  </table>\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n    <table class=\\\"table table-condensed\\\">\\n      <tr>\\n        <td class=\\\"text-right\\\">Subtotal</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'INR' }}</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Shipping</td>\\n        <td class=\\\"text-right\\\">$ 0.00</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Total:</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'INR' }}</td>\\n      </tr>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n    \\n  </div>\\n\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from \"../shared/data.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class CheckoutComponent {\n\n  constructor(public data: DataService, private router: Router) {\n  }\n  public errMessage:string =''\n  onCheckout() {\n    // TODO\n    this.data.checkOut().subscribe(success=>{\n      if(success){\n        this.router.navigate([''])\n      }\n      \n    }, err=> this.errMessage='Failed to checkout')\n  }\n}","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-md-offset-4\\\">\\n    <div class=\\\"alert alert-warning\\\" *ngIf=\\\"this.errMessage\\\">{{this.errMessage}}</div>\\n    <form #theForm=\\\"ngForm\\\" (submit)=\\\"onLogin()\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input #username=\\\"ngModel\\\" [(ngModel)]=\\\"creds.username\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" />\\n        <span *ngIf=\\\"username.invalid && username.dirty && username?.errors?.required\\\" class=\\\"text-danger\\\">Username is required</span>\\n        \\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input  #password=\\\"ngModel\\\" type=\\\"password\\\" required  [(ngModel)]=\\\"creds.password\\\" class=\\\"form-control\\\" name=\\\"password\\\" />\\n        <span *ngIf=\\\"password.invalid && password.dirty && password?.errors?.required\\\" class=\\\"text-danger\\\">Password is required</span>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"submit\\\" [disabled] =\\\"theForm.invalid\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" />\\n        <a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/data.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    templateUrl:'login.component.html'\r\n})\r\nexport class LoginComponent {\r\n    public errMessage:string =''\r\n    constructor(private data: DataService, private router: Router){}\r\n    public creds ={\r\n        username: '',\r\n        password:''\r\n    }\r\n    onLogin(){\r\n        this.data.login(this.creds)\r\n        this.data.login(this.creds).subscribe(success=>{\r\n            if(this.data.order.items.length==0){\r\n                this.router.navigate([''])\r\n                \r\n            }else{\r\n                this.router.navigate(['/checkout'])\r\n            }\r\n        },err=> this.errMessage='Failed to LogIn') \r\n    \r\n    }\r\n}\r\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\nimport {Observable} from 'rxjs'\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    public order: Order = new Order()\r\n    public token: string = ''\r\n    private tokenExpiration: Date;\r\n    constructor(private http: HttpClient) { }\r\n    loadProducts() {\r\n        return this.http.get<Product[]>(\"/api/products\")\r\n    }\r\n    public get loginRequired():boolean{\r\n        return this.token.length ==0 || this.tokenExpiration> new Date()\r\n    }\r\n\r\n    login(creds): Observable<boolean>{\r\n        return this.http.post('/account/createtoken', creds).pipe(map((res:any)=>{\r\n            this.token= res.token,\r\n            this.tokenExpiration= res.expiration\r\n            return true\r\n        }))\r\n    }\r\n    checkOut(){\r\n        if(!this.order.orderNumber){\r\n            this.order.orderNumber= this.order.orderDate.getFullYear().toString()+ this.order.orderDate.getTime().toString()\r\n        }\r\n        else{\r\n            \r\n        }\r\n        // console.log('token: '+this.token)\r\n        return this.http.post('/api/orders', this.order).pipe(map(res=>{\r\n            this.order=new Order()\r\n            return true\r\n        }))\r\n    }\r\n    public addToOrder(newProduct: Product){\r\n    \r\n        let item :OrderItem= this.order.items.find(i=>i.productId==newProduct.id)\r\n        if(item){\r\n            item.quantity+=1\r\n        }else{\r\n            item= new OrderItem()\r\n            item.productId =newProduct.id\r\n            item.productArtist=newProduct.artist\r\n            item.productArtId=newProduct.artId\r\n            item.productSize=newProduct.size\r\n            item.productTitle=newProduct.title\r\n            item.unitPrice=newProduct.price\r\n            item.quantity=1\r\n            item.productCategory=newProduct.category\r\n\r\n            this.order.items.push(item)\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nexport class OrderItem{\r\n        id: number;\r\n        quantity: number;\r\n        unitPrice: number;\r\n        productId: number;\r\n        productCategory: string;\r\n        productSize: string;\r\n        productTitle: string;\r\n        productArtist: string;\r\n        productArtId: string;\r\n    }\r\n\r\n    export class Order {\r\n        orderId: number;\r\n        orderDate: Date = new Date();\r\n        orderNumber: string;\r\n        items:Array< OrderItem> = new Array<OrderItem>();\r\n        get subtotal(): number{\r\n            return _.sum(_.map(this.items, i=>i.unitPrice * i.quantity))\r\n        }\r\n    }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { DataService } from './data.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(public data: DataService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.data.token}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{this.data.order.items.length}}</div>\\r\\n<div>Subtotal: {{data.order.subtotal | currency:\\\"INR\\\"}}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Product</td>\\r\\n            <td>#</td>\\r\\n            <td>$</td>\\r\\n            <td>Total</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n                <td>{{o.productCategory}}-{{o.productTitle}}</td>\\r\\n                <td>{{o.quantity}}</td>\\r\\n                <td>{{o.unitPrice | currency:\\\"INR\\\"}}</td>\\r\\n                <td>{{(o.unitPrice * o.quantity )| currency:\\\"INR\\\"}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length>0\\\" (click)=\\\"OnCheckOut()\\\">Checkout</button>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/data.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-cart',\r\n    templateUrl: 'cart.component.html',\r\n    styleUrls:[]\r\n})\r\nexport class CartComponent {\r\n    /**\r\n     *\r\n     */\r\n    constructor(private data: DataService, private router: Router) {\r\n       \r\n        \r\n    }\r\n    OnCheckOut(){\r\n        if(this.data.loginRequired){\r\n            this.router.navigate(['login'])\r\n        }else{\r\n            this.router.navigate(['checkout'])\r\n            \r\n        }\r\n    }\r\n}\r\n","module.exports = \".product-info img{\\r\\n    max-width:100px;\\r\\n    float:left;\\r\\n    margin:0 2px;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n.product-info .product-name{\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    \\r\\n    <div *ngFor=\\\"let p of products\\\" class=\\\"product-info col-md-4 well well-sm\\\">\\r\\n\\r\\n        <img src=\\\"/img/{{p.artId}}.jpg\\\"  class=\\\"img-responsive\\\" [alt]=\\\"p.title\\\"/>\\r\\n        <div class=\\\"product-name\\\">{{p.category}} - {{p.size}}</div>\\r\\n        <div class=\\\"product-props\\\">\\r\\n            <div><strong>Price:</strong> {{p.price | currency:\\\"INR\\\"}}</div>\\r\\n            <div><strong>Artist:</strong> {{p.artist}}</div>\\r\\n            <div><strong>Title:</strong> {{p.title}}</div>\\r\\n            <div><strong>Description:</strong> {{p.artDescription}}</div>\\r\\n\\r\\n        </div>\\r\\n        <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"","﻿import { Component, OnInit } from '@angular/core'\r\nimport { DataService } from '../shared/data.service';\r\nimport { Product } from '../shared/product';\r\n@Component({\r\n    selector: 'app-product-list',\r\n    templateUrl: 'product-list.component.html',\r\n    styleUrls: ['product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n    public products: Product[] = []\r\n    constructor(private data: DataService) { }\r\n    ngOnInit() {\r\n        this.data.loadProducts().subscribe(data => this.products=data)\r\n    }\r\n    addProduct(product: Product){\r\n        this.data.addToOrder(product)\r\n    }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n            <h3>{{title}}</h3>\\r\\n    <app-product-list></app-product-list>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"well well-sm\\\">\\r\\n            <app-cart></app-cart>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:'app-shop',\r\n    templateUrl: 'shop.component.html'\r\n})\r\nexport class ShopComponent{\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}